_digit : ’0’-’9’ ;

VAL2 : ’1’-’9’ {_digit} ;

F : "func" ID "(" E1 ")" "{" STMTS "}"
  | "func" "main" "(" E1 ")" "{" STMTS "}"
  ;

E1 : DT ID E1
   | "," E1
   | ""
   ;

DT : "num"
	| "flag"
	| "string"
	;

STMTS : L ";" STMTS
	  | WLOOP STMTS
	  | FLOOP STMTS
	  | IF_COND STMTS
	  | ""
   	  ;

FLOOP : "floop" "(" ASSIGN ";" COND ";" ITER ")" "{" STMTS "}";

WLOOP : "wloop" "(" COND ")" "{" STMTS "}";

ASSIGN : DT ID "=" CONST
	   | DT ID "=" ID
	   | ID "=" CONST
	   | ID "=" ID
	   ;

ITER : ID "++"
	 | ID "--"
	 | ID "=" C
	 ;

COND : "!" C	 
     | C
	 ;

C : "(" C ")"
  | EXP COMP EXP
  | C "&&" C
  | C "||" C
  | ID
  | "flag"
  | "num"
  ;

COMP : "=="
	 | ">="
	 | "<="
	 | "!="
	 | ">"
	 | "<"
	 ;

EXP : ID
	| "num"
	| EXP F
	| "(" EXP ")"
	;

F : OP EXP F
  | ""
  ;

OP : "+"
   | "-"
   | "*"
   | "/"
   ;

IF_COND : "if" "(" COND ")" "{" STMTS "}" ELSE_IF_COND;

ELSE_IF_COND : "else_if" "(" COND ")" "{" STMTS "}" ELSE_COND
			 | ""
			 ;

ELSE_COND : "else" "{" STMTS "}"
		  | ""
		  ;

ITER : ID "=" EXP
	 | ID "++"
	 | ID "--"
	;

L : "cook" "str" ID "=" VAL1
  | "cook" "num" ID "=" VAL2
  | "cook" "flag" ID "=" VAL3
  | "cook" "num" ID "=" "{" VAL4 "}"
  | "cook" "str" ID "=" "{" VAL5 "}"
  | "cook" "flag" ID "=" "{" VAL6 "}"
  | "cook" DT ID "=" "[" VAL7 "]"
  | "cook" ID "=" "(" VAL7 ")"
  | "cook" "str" ID 
  | "cook" "num" ID 
  | "cook" "flag" ID 
  | "cook" "num" ID 
  | "cook" "str" ID 
  | "cook" "flag" ID 
  | "cook" DT ID 
  | "cook" ID 
  |  ID "=" VAL1
  |  ID "=" VAL2
  |  ID "=" VAL3
  |  ID "=" "{" VAL4 "}"
  |  ID "=" "{" VAL5 "}"
  |  ID "=" "{" VAL6 "}"
  |  DT ID "=" "[" VAL7 "]"
  |  ID "=" "(" VAL7 ")"
  | "echo" "("  ")" 
  ;


VAL3 : "true"
	 | "false"
	;

VAL4 : VAL2 VAL4_T
	|""
	;

VAL4_T: "," VAL4
	  | ""
	  ;

VAL6 : VAL3 VAL6_T
	 |""
	 ;

VAL6_T : "," VAL6
	   | ""
	   ;
VAL7 : VAL1 "," VAL7
     | VAL2 "," VAL7
	 | VAL3 "," VAL7
	 ;
